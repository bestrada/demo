===========================================================================
repo, index and commit
===========================================================================
 * repo: There is local and remote or upstream repo.
   - The upstream repo is usually called 'origin'. For now, just consider them synonimous
 * index: data structure the keeps track of the state of your working directory
   (XXX show the .git directory)
 * commit 
   - verb = storing the change into the repo
   - noun = the object/node that's created when commit your change.
   - commit objects are connected to each other in a commit graph 
     (XXX show gitk)
   - each commit has at least one parent
   - A merge commit has two parents.
===========================================================================
refs, branch and heads
===========================================================================
 * refs: There are two types of refs: branch and tag (we'll only talk about
   branch)
 * branch: a liniage of commits
 * head: a pointer that points to the tip of a branch
   - each new commit will attach itself to the head and then the head will
     move to point to the new commit
     (XXX graph here)
   - The term head and branch are almost synonimous and used interchangably 
     in the docs
   - There are local heads and remote heads
     - git keeps track of the remote head using tracking branch
       (I'll show you how to deal with this later)
===========================================================================
clone, fetch, pull, push
===========================================================================
 * clone: downloading everything from a remote repo to create an identical 
          local repo
   - after a clone, a tracking branch for origin master is automatically created
 * fetch: the act of downloading objects (commit and refs) from upstream repo 
          into the local repo
          (XXX graph here)
 * pull: is fetch + advancing the local heads to point to the same positions
         as the remote heads, if the remote heads are ahead (technically
         this is a fetch + merge, I'll explain later)
 * push: the act of uploading the commit objects to upstream repo and advancing
         the remote heads to the same positions as the local head. It's the
         reverse of pull with some added restriction (we'll talk about that
         later)
 * always pull before you push
   (XXX ask questions at this point. People are likely to be confused)
===========================================================================
checkout
===========================================================================
 * checkout: put files in the working directory from a specific commit
   - when you checkout a branch, you're checking out the commit where the
     branch head is pointing at.

===========================================================================
The most usefull commands
===========================================================================
git status
gitk --all

===========================================================================
simplest flow: clone -> edit -> commit -> push
===========================================================================
hendy@bali2:gitdemo$ ls
there's nothing here
hendy@bali2:gitdemo$ git clone ssh://git@cvs.flixsterqa.com:4949/demo
Initialized empty Git repository in /home/hendy/tmp/gitdemo/demo/.git/
remote: Counting objects: 4293, done.
remote: Compressing objects: 100% (1683/1683), done.
remote: Total 4293 (delta 2214), reused 4040 (delta 2064)
Receiving objects: 100% (4293/4293), 54.51 MiB | 435 KiB/s, done.
Resolving deltas: 100% (2214/2214), done.
Checking out files: 100% (2379/2379), done.
hendy@bali2:gitdemo$ ls
demo
hendy@bali2:gitdemo$ cd demo
hendy@bali2:demo$ ls -a
.  ..  build.xml  .classpath  .git  .gitignore  .project  .settings  src  tools  wsdl
git clone created the .git directory where the local repository lives and at this
point it's identical to the remote one i.e.
ssh://git@cvs.flixsterqa.com:4949/demo
hendy@bali2:demo$ git status
# On branch master
nothing to commit (working directory clean)
hendy@bali2:demo$ emacs build.xml
edit the file
hendy@bali2:demo$ git status
# On branch master
# Changed but not updated:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   build.xml
#
no changes added to commit (use "git add" and/or "git commit -a")
hendy@bali2:demo$ gitk --all
show the gitk gui
hendy@bali2:demo$ gitk add .
hendy@bali2:demo$ git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#	modified:   build.xml
#
hendy@bali2:demo$ git commit
an editor is launched. Fill the commit comment
(or leave it blank to abort the commit process)
hendy@bali2:demo$ gitk --all
show the gitk gui. Notice that the master is one commit ahead
of the origin/master.
hendy@bali2:demo$ git push
Counting objects: 5, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 332 bytes, done.
Total 3 (delta 2), reused 0 (delta 0)
To ssh://git@cvs.flixsterqa.com:4949/demo
   3f6dd1d..1112a98  master -> master

===========================================================================
flow 2: edit -> commit -> pull -> merge -> push
===========================================================================
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ e build.xml 
hendy@bali2:demo$ git commit -a
[master ca00c10] remove lib from ant classpath
 1 files changed, 0 insertions(+), 3 deletions(-)
hendy@bali2:demo$ git push
To ssh://git@cvs.flixsterqa.com:4949/demo
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'ssh://git@cvs.flixsterqa.com:4949/demo'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes before pushing again.  See the 'Note about
fast-forwards' section of 'git push --help' for details.
oops, we're not in sync with the origin
hendy@bali2:demo$ git pull
remote: Counting objects: 13, done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 7 (delta 1), reused 0 (delta 0)
Unpacking objects: 100% (7/7), done.
From ssh://cvs.flixsterqa.com:4949/demo
   69c16bb..82cf9f8  master     -> origin/master
Merge made by recursive.
 src/net/flixster/sonic/HelloSonic.java |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git push
Counting objects: 8, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 612 bytes, done.
Total 5 (delta 1), reused 0 (delta 0)
To ssh://git@cvs.flixsterqa.com:4949/demo
   82cf9f8..9dd1576  master -> master

===========================================================================
flow 3: edit -> commit -> pull -> merge-conflict -> resolve -> commit -> push
===========================================================================
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ e build.xml 
hendy@bali2:demo$ git commit -a
[master a242c7b] replace tomcat5.5 with tomcat6 in build classpath
 1 files changed, 1 insertions(+), 1 deletions(-)
hendy@bali2:demo$ git push
To ssh://git@cvs.flixsterqa.com:4949/demo
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'ssh://git@cvs.flixsterqa.com:4949/demo'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes before pushing again.  See the 'Note about
fast-forwards' section of 'git push --help' for details.
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git pull
remote: Counting objects: 5, done.
remote: Compressing objects: 100% (3/3), done.
Unpacking objects: 100% (3/3), done.
remote: Total 3 (delta 1), reused 0 (delta 0)
From ssh://cvs.flixsterqa.com:4949/demo
   9dd1576..041b93f  master     -> origin/master
Auto-merging build.xml
CONFLICT (content): Merge conflict in build.xml
Automatic merge failed; fix conflicts and then commit the result.
hendy@bali2:demo$ git status
# On branch master
# Your branch and 'origin/master' have diverged,
# and have 1 and 1 different commit(s) each, respectively.
#
# Unmerged paths:
#   (use "git add/rm <file>..." as appropriate to mark resolution)
#
#	both modified:      build.xml
#
no changes added to commit (use "git add" and/or "git commit -a")
hendy@bali2:demo$ git diff build.xml
diff --cc build.xml
index 5f234c0,4d1e6f9..0000000
--- a/build.xml
+++ b/build.xml
@@@ -14,9 -14,6 +14,12 @@@
                <fileset dir="/usr/lib/jvm/java-6-sun-1.6.0.22/jre/lib">
                        <include name="*.jar" />
                </fileset>
++<<<<<<< HEAD
 +              <fileset dir="/usr/share/tomcat6/common/lib">
 +                      <include name="*.jar" />
 +              </fileset>
++=======
++>>>>>>> 041b93fda0fd666b14216b2a5fa1f9874294d258
        </path>
  
        <path id="run.classpath">
hendy@bali2:demo$ e build.xml
hendy@bali2:demo$ git commit -a
[master 46cf2cf] Merge remote branch 'origin/master'
hendy@bali2:demo$ git push
Counting objects: 8, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 556 bytes, done.
Total 4 (delta 1), reused 0 (delta 0)
To ssh://git@cvs.flixsterqa.com:4949/demo
   041b93f..46cf2cf  master -> master
hendy@bali2:demo$ gitk --allnnn

===========================================================================
flow 4: create branch -> checkout branch
         -> edit -> commit -> push branch
===========================================================================
hendy@bali2:demo$ git branch --set-upstream feature1
Branch feature1 set up to track local branch master.
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git status
# On branch master
nothing to commit (working directory clean)
hendy@bali2:demo$ git checkout feature1
Switched to branch 'feature1'
hendy@bali2:demo$ e src/net/flixster/sonic/HelloSonic.java 
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git status
# On branch feature1
# Changed but not updated:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   src/net/flixster/sonic/HelloSonic.java
#
no changes added to commit (use "git add" and/or "git commit -a")
hendy@bali2:demo$ git commit -a
[feature1 8eec6c9] tell Sonic this is 2011!
 1 files changed, 4 insertions(+), 0 deletions(-)
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git checkout master
Switched to branch 'master'
hendy@bali2:demo$ e build.xml 
hendy@bali2:demo$ git status
# On branch master
# Changed but not updated:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   build.xml
#
no changes added to commit (use "git add" and/or "git commit -a")
hendy@bali2:demo$ git commit -a
[master 71ec608] remove tomcat library from build.xml
 1 files changed, 0 insertions(+), 3 deletions(-)
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git push
Counting objects: 5, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 301 bytes, done.
Total 3 (delta 2), reused 0 (delta 0)
To ssh://git@cvs.flixsterqa.com:4949/demo
   ff65b20..71ec608  master -> master
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git checkout feature1 
Switched to branch 'feature1'
Your branch and 'master' have diverged,
and have 1 and 1 different commit(s) each, respectively.
hendy@bali2:demo$ git push
Everything up-to-date
hendy@bali2:demo$ git push origin feature1
Counting objects: 13, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (7/7), 687 bytes, done.
Total 7 (delta 1), reused 0 (delta 0)
To ssh://git@cvs.flixsterqa.com:4949/demo
 * [new branch]      feature1 -> feature1
hendy@bali2:demo$ gitk --all

===========================================================================
flow 5: merging branches
===========================================================================
hendy@bali2:demo$ git checkout master
Switched to branch 'master'
hendy@bali2:demo$ git help merge
hendy@bali2:demo$ git merge feature1 
Merge made by recursive.
 src/net/flixster/sonic/HelloSonic.java |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)
hendy@bali2:demo$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 2 commits.
#
nothing to commit (working directory clean)
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git push
Counting objects: 4, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 282 bytes, done.
Total 2 (delta 1), reused 0 (delta 0)
To ssh://git@cvs.flixsterqa.com:4949/demo
   71ec608..d23768b  master -> master
hendy@bali2:demo$ gitk --all

===========================================================================
flow 5-1: 'merge branch1 into branch2' vs 'merge branch2 into branch1'
===========================================================================
hendy@bali2:demo$ git checkout feature1
Switched to branch 'feature1'
Your branch is behind 'master' by 2 commits, and can be fast-forwarded.
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git merge master
Updating 8eec6c9..d23768b
Fast-forward
 build.xml |    3 ---
 1 files changed, 0 insertions(+), 3 deletions(-)
hendy@bali2:demo$ gitk --all
hendy@bali2:demo$ git push origin feature1
Total 0 (delta 0), reused 0 (delta 0)
To ssh://git@cvs.flixsterqa.com:4949/demo
   8eec6c9..d23768b  feature1 -> feature1
hendy@bali2:demo$ gitk --all

===========================================================================
flow 6a: abandoning uncommited change
===========================================================================
hendy@bali2:demo$ git diff build.xml
diff --git a/build.xml b/build.xml
index 4d1e6f9..6fb9e25 100644
--- a/build.xml
+++ b/build.xml
@@ -1,5 +1,7 @@
 <?xml version="1.0"?>
 
+I messed up
+
 <project name="sonic-helloworld" basedir="." default="jar">
        <property name="src.dir" value="src"/>
        <property name="tools.dir" value="tools"/>
hendy@bali2:demo$ git status
# On branch feature1
# Changed but not updated:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   build.xml
#
no changes added to commit (use "git add" and/or "git commit -a")
hendy@bali2:demo$ git checkout -- build.xml
hendy@bali2:demo$ git status
# On branch feature1
nothing to commit (working directory clean)
hendy@bali2:demo$ git diff build.xml

===========================================================================
flow 6b: abandoning uncommited change but already added to index
===========================================================================
hendy@bali2:demo$ e build.xml
hendy@bali2:demo$ git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?
hendy@bali2:demo$ git add .
hendy@bali2:demo$ git status
# On branch feature1
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#	modified:   build.xml
#
hendy@bali2:demo$ git diff --cached
diff --git a/build.xml b/build.xml
index 4d1e6f9..1b159a6 100644
--- a/build.xml
+++ b/build.xml
@@ -1,5 +1,7 @@
 <?xml version="1.0"?>
 
+I messed up again
+
 <project name="sonic-helloworld" basedir="." default="jar">
        <property name="src.dir" value="src"/>
        <property name="tools.dir" value="tools"/>
hendy@bali2:demo$ git reset HEAD build.xml
Unstaged changes after reset:
M	build.xml
hendy@bali2:demo$ git status
# On branch feature1
# Changed but not updated:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   build.xml
#
no changes added to commit (use "git add" and/or "git commit -a")
hendy@bali2:demo$ git diff build.xml
diff --git a/build.xml b/build.xml
index 4d1e6f9..1b159a6 100644
--- a/build.xml
+++ b/build.xml
@@ -1,5 +1,7 @@
 <?xml version="1.0"?>
 
+I messed up again
+
 <project name="sonic-helloworld" basedir="." default="jar">
        <property name="src.dir" value="src"/>
        <property name="tools.dir" value="tools"/>
hendy@bali2:demo$ git checkout -- build.xml
hendy@bali2:demo$ git diff build.xml

===========================================================================
flow 7: undoing commited change with revert
===========================================================================
hendy@bali2:demo$ git revert HEAD
Finished one revert.
[feature1 2f956b4] Revert "break build.xml"
 1 files changed, 0 insertions(+), 2 deletions(-)
hendy@bali2:demo$ gitk --all

===========================================================================
flow 8: undoing commited change with resert
===========================================================================
hendy@bali2:demo$ git log HEAD~3..HEAD
commit 2f956b4d93e5645b02fd4a430ec3bfe43cf7aa43
Author: hendy <hendy@flixster-inc.com>
Date:   Tue Jul 19 15:51:28 2011 -0700

    Revert "break build.xml"
    
    This reverts commit 4a05564e8ccb71f3b20b2d734a16bfefd3e3de33.

commit 4a05564e8ccb71f3b20b2d734a16bfefd3e3de33
Author: hendy <hendy@flixster-inc.com>
Date:   Tue Jul 19 15:50:09 2011 -0700

    break build.xml

commit d23768b32d75195a8d412665658928c8b281b945
Merge: 71ec608 8eec6c9
Author: hendy <hendy@flixster-inc.com>
Date:   Tue Jul 19 15:16:17 2011 -0700

    Merge branch 'feature1'

commit 8eec6c92363ff9592c5e8e7b4fecc6f9c7e789fc
Author: hendy <hendy@flixster-inc.com>
Date:   Tue Jul 19 15:02:07 2011 -0700

    tell Sonic this is 2011!
hendy@bali2:demo$ git reset --hard d23768b3
HEAD is now at d23768b Merge branch 'feature1'
hendy@bali2:demo$ gitk --all &
[2] 28432
hendy@bali2:demo$ git status
# On branch feature1
nothing to commit (working directory clean)
hendy@bali2:demo$ 

===========================================================================
Personal branch
===========================================================================
